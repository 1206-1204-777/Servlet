true

@Test
	void Exception() {
	    Futures futures = new Futures() {
	        @Override
	        public CompletableFuture<String> fetchData() {
	            return CompletableFuture.failedFuture(new RuntimeException("error"));
	        }
	    };

	    CompletableFuture<String> future = futures.fetchData();

	    // 例外が適切に処理されるか
	    Throwable exception = assertThrows(CompletionException.class, future::join);
	    assertTrue(exception.getCause() instanceof RuntimeException);
	    assertEquals("error", exception.getCause().getMessage());
	    
	}



false

@Test
	void Exception() {
		Futures futures = new Futures(){
			@Override
			public CompletableFuture<String> fetchData(){
				return CompletableFuture.failedFuture(new RuntimeException("error"));
			}
		};
		
		CompletableFuture<String> future = futures.fetchData();
		
		//例外が適切処理されるか
		assertEquals("Error: java.lang.RuntimeException: error",future.join());
	}
}